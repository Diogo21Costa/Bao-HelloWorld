diff --git a/src/main.c b/src/main.c
index eabe347..2233486 100644
--- a/src/main.c
+++ b/src/main.c
@@ -30,64 +30,8 @@
 
 spinlock_t print_lock = SPINLOCK_INITVAL;
 
-#ifdef DEMO_IPC
-
-#define SHMEM_IRQ_ID (52)
-
-char* const baremetal_message = (char*)0x70000000;
-char* const zephyr_message    = (char*)0x70002000;
-const size_t shmem_channel_size = 0x2000;
-
-void shmem_update_msg(int irq_count) {
-    sprintf(baremetal_message, "Bao baremetal guest received %d uart interrupts!\n",
-        irq_count);
-}
-
-char* strnchr(const char* s, size_t n, char c) {
-    for (size_t i = 0; i < n; i++) {
-        if (s[i] == c) {
-            return (char*)s + i;
-        }
-    }
-    return NULL;
-}
-
-void shmem_handler() {
-    zephyr_message[shmem_channel_size-1] = '\0';
-    char* end = strchr(zephyr_message, '\n');
-    if (end != NULL) {
-        *end = '\0';
-    }
-    printf("message from zephyr: %s\n", zephyr_message);
-}
-
-void shmem_init() {
-    memset(baremetal_message, 0, shmem_channel_size);
-    memset(zephyr_message, 0, shmem_channel_size);
-    shmem_update_msg(0);
-    irq_set_handler(SHMEM_IRQ_ID, shmem_handler);
-    irq_set_prio(SHMEM_IRQ_ID, IRQ_MAX_PRIO);
-    irq_enable(SHMEM_IRQ_ID);
-}
-
-#endif
-
-void uart_rx_handler(){
-    static int irq_count = 0;
-    printf("cpu%d: %s %d\n",get_cpuid(), __func__, ++irq_count);
-    uart_clear_rxirq();
-#ifdef DEMO_IPC
-        shmem_update_msg(irq_count);
-#endif
-}
-
-void ipi_handler(){
-    printf("cpu%d: %s\n", get_cpuid(), __func__);
-    irq_send_ipi(1ull << (get_cpuid() + 1));
-}
-
 void timer_handler(){
-    printf("cpu%d: %s\n", get_cpuid(), __func__);
+    printf("[baremetal] cpu%d: %s\n", get_cpuid(), __func__);
     timer_set(TIMER_INTERVAL);
     irq_send_ipi(1ull << (get_cpuid() + 1));
 }
@@ -101,31 +45,18 @@ void main(void){
         printf("Bao bare-metal test guest\n");
         spin_unlock(&print_lock);
 
-        irq_set_handler(UART_IRQ_ID, uart_rx_handler);
         irq_set_handler(TIMER_IRQ_ID, timer_handler);
-        irq_set_handler(IPI_IRQ_ID, ipi_handler);
-
-        uart_enable_rxirq();
-
+        
         timer_set(TIMER_INTERVAL);
         irq_enable(TIMER_IRQ_ID);
         irq_set_prio(TIMER_IRQ_ID, IRQ_MAX_PRIO);
 
-#ifdef DEMO_IPC
-        shmem_init();
-#endif
-
         master_done = true;
     }
 
-    irq_enable(UART_IRQ_ID);
-    irq_set_prio(UART_IRQ_ID, IRQ_MAX_PRIO);
-    irq_enable(IPI_IRQ_ID);
-    irq_set_prio(IPI_IRQ_ID, IRQ_MAX_PRIO);
-
     while(!master_done);
     spin_lock(&print_lock);
-    printf("cpu %d up\n", get_cpuid());
+    printf("[baremetal] cpu %d up\n", get_cpuid());
     spin_unlock(&print_lock);
 
     while(1) wfi();
diff --git a/src/platform/qemu-aarch64-virt/inc/plat.h b/src/platform/qemu-aarch64-virt/inc/plat.h
index 5e4fca6..5a3374d 100644
--- a/src/platform/qemu-aarch64-virt/inc/plat.h
+++ b/src/platform/qemu-aarch64-virt/inc/plat.h
@@ -2,7 +2,7 @@
 #define PLAT_H
 
 #define PLAT_MEM_BASE 0x50000000
-#define PLAT_MEM_SIZE 0x30000000
+#define PLAT_MEM_SIZE 0x4000000
 
 #define PLAT_GICD_BASE_ADDR (0x08000000)
 #define PLAT_GICC_BASE_ADDR (0x08010000)
